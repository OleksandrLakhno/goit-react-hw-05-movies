{"version":3,"file":"static/js/771.2bf6a23f.chunk.js","mappings":"yRACA,EAAuB,yBAAvB,EAAwD,0BAAxD,EAAwF,wB,SCiCvF,EA7BkB,SAAC,GAAgB,IAAfA,EAAc,EAAdA,SACjB,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAeA,OACI,0BACI,kBAAMC,UAAWC,EAAQL,SAXZ,SAAAM,GAEjB,GADAA,EAAMC,iBACmB,KAArBL,EAAUM,OACV,OAAOC,EAAAA,GAAAA,MAAY,wBAEvBT,EAASE,GACTC,EAAa,KAKT,WACI,kBAAOC,UAAWC,EAASK,KAAK,OAAOC,KAAK,QAAQC,aAAa,MAAMC,WAAS,EAACC,YAAY,8BAA8BC,MAAOb,EAAWc,SAhBpI,SAAAV,GACjBH,EAAaG,EAAMW,cAAcF,MAAMG,mBAgB/B,mBAAQd,UAAWC,EAAOK,KAAK,SAA/B,0BCxBhB,EAAuB,yBAAvB,EAAuD,yBAAvD,EAAuF,yBCyDvF,EAlDmB,WACf,OAA4BT,EAAAA,EAAAA,UAAS,IAArC,eAAOkB,EAAP,KAAeC,EAAf,KACA,GAA8BnB,EAAAA,EAAAA,WAAS,GAAvC,eAAOoB,EAAP,KAAgBC,EAAhB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAcJ,EAAaK,IAAI,SALhB,SAONC,EAPM,0EAOrB,WAA4B5B,GAA5B,0EACSA,EADT,wDAIIoB,GAAW,GAJf,mBAM6BS,EAAAA,EAAAA,IAAiB7B,GAN9C,UAO8B,KADhBiB,EANd,QAOmBa,OAPnB,wBAQYvB,EAAAA,GAAAA,MAAY,mBARxB,2BAWQW,EAAUD,GAXlB,kDAaQV,EAAAA,GAAAA,MAAY,mBAbpB,yBAeQa,GAAW,GAfnB,8EAPqB,sBAqCrB,OANAW,EAAAA,EAAAA,YAAU,WACFL,GACAE,EAAYF,KAEjB,CAACA,KAGA,4BACI,SAAC,EAAD,CAAY5B,SAbK,SAACE,GACtBuB,EAAgB,CAACS,MAAOhC,IACxB4B,EAAY5B,MAYPmB,IAAW,SAACc,EAAA,EAAD,IACXhB,IAAU,eAAIf,UAAWC,EAAf,SACNc,EAAOiB,KAAK,SAAAC,GAAK,OAAI,eAAIjC,UAAWC,EAAf,UAClB,SAAC,KAAD,CAAMD,UAAWC,EAAQiC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAACC,KAAMf,GAAlE,SAA8EW,EAAMK,SADtCL,EAAME,c,0MChDlEI,EAAM,mCACZC,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAkB,mCAAG,sGACTD,IAAAA,IAAA,qCAAwCD,IAD/B,cAC1BG,EAD0B,gBAEAA,EAASC,KAAKC,QAFd,cAE1BC,EAF0B,yBAGzBA,GAHyB,2CAAH,qDAMlBlB,EAAgB,mCAAG,WAAO7B,EAAWgD,GAAlB,yFACPN,IAAAA,IAAA,+BAAkCD,EAAlC,iBAA8CO,EAA9C,8BAAwEhD,IADjE,cACxB4C,EADwB,gBAECA,EAASC,KAAKC,QAFf,cAExBG,EAFwB,yBAGvBA,GAHuB,2CAAH,wDAMhBC,EAAe,mCAAG,WAAMC,GAAN,yFACNT,IAAAA,IAAA,gBAAmBS,EAAnB,oBAAsCV,IADhC,cACvBG,EADuB,gBAEFA,EAASC,KAFP,cAEvBO,EAFuB,yBAGtBA,GAHsB,2CAAH,sDAMfC,EAAe,mCAAG,WAAMF,GAAN,yFACNT,IAAAA,IAAA,gBAAmBS,EAAnB,4BAA8CV,IADxC,cACvBG,EADuB,gBAEFA,EAASC,KAFP,cAEvBS,EAFuB,yBAGtBA,GAHsB,2CAAH,sDAMfC,EAAe,mCAAG,WAAMJ,GAAN,yFACNT,IAAAA,IAAA,gBAAmBS,EAAnB,4BAA8CV,IADxC,cACvBG,EADuB,gBAEFA,EAASC,KAFP,cAEvBW,EAFuB,yBAGtBA,GAHsB,2CAAH","sources":["webpack://goit-react-hw-05-movies/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.js","webpack://goit-react-hw-05-movies/./src/components/MoviesPage/MoviesPage.module.css?564c","components/MoviesPage/MoviesPage.js","components/services/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchForm_form__o80os\",\"input\":\"SearchForm_input__HOxJo\",\"btn\":\"SearchForm_btn__TXrR3\"};","import { useState } from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport toast from \"react-hot-toast\";\nimport s from \"./SearchForm.module.css\";\n\nconst SearchForm = ({onSubmit}) => {\n    const [movieName, setMovieName] = useState('');\n\n    const handleChange = event => {\n        setMovieName(event.currentTarget.value.toLowerCase());\n    };\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        if (movieName.trim() === '') {\n            return toast.error('Your search is empty');\n        }\n        onSubmit(movieName);\n        setMovieName('');\n    };\n\n    return (\n        <div>\n            <form className={s.form} onSubmit={handleSubmit}>\n                <input className={s.input} type=\"text\" name=\"query\" autoComplete=\"off\" autoFocus placeholder=\"Enter the title of the film\" value={movieName} onChange={handleChange}/>\n                <button className={s.btn} type=\"submit\">Search</button>\n            </form>\n        </div>\n    )\n}\n\nSearchForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired\n};\n export default SearchForm;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesPage_list__xgBYI\",\"link\":\"MoviesPage_link__Kqtq6\",\"item\":\"MoviesPage_item__31wgY\"};","import { useState, useEffect } from \"react\";\nimport { fetchMovieByName } from \"components/services/API\";\nimport { Link, useSearchParams, useLocation } from \"react-router-dom\";\nimport toast from \"react-hot-toast\";\nimport Loader from \"components/Loader\";\nimport SearchForm from \"components/SearchForm\";\nimport s from \"./MoviesPage.module.css\";\n\nconst MoviesPage = () => {\n    const [movies, setMovies] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const location = useLocation();\n    const currentItem = searchParams.get('query');\n\n    async function searchMovie (movieName) {\n        if (!movieName) {\n            return\n        }\n        setLoading(true);\n        try {\n            const movies = await fetchMovieByName(movieName);\n            if (movies.length === 0) {\n                toast.error('Movie not found');\n                return;\n            }\n            setMovies(movies);\n        } catch(error) {\n            toast.error('Movie not found')\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const formSearchSubmit = (movieName) => {\n        setSearchParams({query: movieName})\n        searchMovie(movieName);\n    };\n\n    useEffect(() => {\n        if (currentItem) {\n            searchMovie(currentItem);\n        }\n    }, [currentItem]);\n\n    return (\n        <div>\n            <SearchForm onSubmit={formSearchSubmit} />\n            {loading && <Loader />}\n            {movies && <ul className={s.list}>\n                {movies.map((movie => <li className={s.item} key={movie.id}>\n                    <Link className={s.link} to={`/movies/${movie.id}`} state={{from: location}}>{movie.title}</Link>\n                </li>))}\n                </ul>}\n        </div>\n    )\n};\n\nexport default MoviesPage;","import axios from 'axios';\n\nconst KEY = 'fea9bd6cc64d250f3b3bb2ecec82173d';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchMoviesInTrend = async () => {\n  const responce = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  const moviesInTrendData = await responce.data.results;\n  return moviesInTrendData;\n};\n\nexport const fetchMovieByName = async (movieName, page) => {\n  const responce = await axios.get(`search/movie?api_key=${KEY}&page=${page}&language=en&query=${movieName}`);\n  const searchMoviesData = await responce.data.results;\n  return searchMoviesData;\n};\n\nexport const getMovieDetails = async movieId => {\n  const responce = await axios.get(`movie/${movieId}?api_key=${KEY}`);\n  const MovieDetails = await responce.data;\n  return MovieDetails;\n};\n\nexport const getMovieCredits = async movieId => {\n  const responce = await axios.get(`movie/${movieId}/credits?api_key=${KEY}`);\n  const movieCredits = await responce.data;\n  return movieCredits;\n};\n\nexport const getMovieReviews = async movieId => {\n  const responce = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}`);\n  const movieReviews = await responce.data;\n  return movieReviews;\n};\n\n// export async function fetchMoviesInTrend() {\n//   const response = await axios.get(\n//       `trending/movie/day?api_key=${KEY}`\n//     );\n//     return response.data.results;\n//   };\n  \n//   export async function fetchMovieByName(searchQuery) {\n//     const response = await axios.get(\n//       `search/movie?api_key=${KEY}&query=${searchQuery}`\n//     );\n//     return response.data.results;  \n//   };\n  \n  // export async function getMovieDetails(movieId) {\n  //  const response = await axios.get(\n  //     `movie/${movieId}?api_key=${KEY}`\n  //   );\n  //   return response.data;  \n  // };\n  \n//   export async function getMovieCredits(movieId) {\n//       const response = await axios.get(\n//       `movie/${movieId}/credits?api_key=${KEY}`\n//     );\n//     return response.data;  \n//   };\n  \n//   export async function getMovieReviews(movieId) {\n//        const response = await axios.get(\n//       `movie/${movieId}/reviews?api_key=${KEY}`\n//     );\n//     return response.data; \n//   };"],"names":["onSubmit","useState","movieName","setMovieName","className","s","event","preventDefault","trim","toast","type","name","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","movies","setMovies","loading","setLoading","useSearchParams","searchParams","setSearchParams","location","useLocation","currentItem","get","searchMovie","fetchMovieByName","length","useEffect","query","Loader","map","movie","to","id","state","from","title","KEY","axios","fetchMoviesInTrend","responce","data","results","moviesInTrendData","page","searchMoviesData","getMovieDetails","movieId","MovieDetails","getMovieCredits","movieCredits","getMovieReviews","movieReviews"],"sourceRoot":""}